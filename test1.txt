                
postgres=# CREATE TABLE SAMPLE
postgres-# (
postgres(# sno integer NOT NULL,
postgres(# sid integer NOT NULL,
postgres(# sname varchar(20),
postgres(# sd date,
postgres(# CONSTRAINT pk_sid PRIMARY KEY(sid)
postgres(# );
CREATE TABLE


postgres=# CREATE PROCEDURE sample_insert(_sno integer, _sid integer, _sname varchar, _sd date)
postgres-# LANGUAGE SQL
postgres-# AS $BODY$
postgres$# INSERT INTO SAMPLE(sno, sid, sname, sd)
postgres$# VALUES(_sno, _sid, _sname, _sd);
postgres$# $BODY$;
CREATE PROCEDURE

postgres=# CALL sample_insert(1, 101, 'aaa', '2020-08-22');
CALL

postgres=#  CALL sample_insert(2, 102, 'bbb', '2020-08-22');
CALL



postgres=# CREATE TABLE accounts
postgres-# (
postgres(# accid int generated by default as identity,
postgres(# accname varchar(20) not null,
postgres(# balance dec(15,2) not null,
postgres(# primary key(acc id)
postgres(# );
CREATE TABLE

postgres=# insert into accounts (accname, balance)
postgres-# values('mani', 10000);
INSERT 0 1
postgres=# insert into accounts (accname, balance)
postgres-# values('velu', 20000);
INSERT 0 1

postgres=# create or replace procedure transfer(
postgres(# sender int,
postgres(# receiver int,
postgres(# amount dec
postgres(# )
postgres-# language plpgsql
postgres-# as $$
postgres$# begin
postgres$# update accounts
postgres$# set balance = balance + amount
postgres$# where id = receiver;
postgres$# update accounts
postgres$# set balance = balance - amount
postgres$# where id = sender;
postgres$# commit;
postgres$# end;$$
postgres-# ;
CREATE PROCEDURE

postgres=# call transfer(1,2,100);
CALL

